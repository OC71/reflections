How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

git config --global color.ui auto

How can you use the commands git log and git diff to view the history of files?
How might using version control make you more confident to make changes that could break something?

git config --global core.editor "'C:/Program\ Files/Sublime\ Text\ 3/sublime_text.exe' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3

Now that you have your workspace set up, what do you want to try using Git for?

git diff:Compare two commits 
git clone: Make a copy of an entire Git repository
git checkout: Temporarily reset all files in a directory to their state at the time of a specific commit.
git log: Show the commits made in this repository, starting with the most recent.



git init: creates a new repository 
git status: shows which files have changed since the last commit

What happens when you initialize a repository? Why do you need to do it?

git add: to add files to the staging area

How is the staging area different from the working directory and the repository? What value do you think it offers?



